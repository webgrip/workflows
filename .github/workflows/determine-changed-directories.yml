name: "[Call] Determine Changed Directories"

on:
  workflow_call:
    inputs:
      inside-dir:
        type: string
        required: true
    outputs:
      changed-paths:
        description: 'Changed directories inside the specified directory.'
        value: ${{ jobs.determine-changed-directories.outputs.changed-paths }}

jobs:
  determine-changed-directories:
    name: 'Determine Changed Directories'
    runs-on: self-hosted
    outputs:
      changed-paths: ${{ steps.get-changes.outputs.paths }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed directories (ignore deleted ones)
        id: get-changes
        run: |
          PREVIOUS_COMMIT="${{ github.event.before }}"
          if [[ -z "$PREVIOUS_COMMIT" || "$PREVIOUS_COMMIT" == "0000000000000000000000000000000000000000" ]]; then
            if git rev-parse HEAD^ >/dev/null 2>&1; then
              PREVIOUS_COMMIT=$(git rev-parse HEAD^)
            else
              echo "No valid previous commit; defaulting to empty paths."
              echo "paths=[]" >> $GITHUB_OUTPUT
              exit 0
          fi

          echo "Diffing against $PREVIOUS_COMMIT -> ${{ github.sha }}"

          RAW_DIRS=$(git diff --name-only "$PREVIOUS_COMMIT" "${{ github.sha }}" -- "${{ inputs.inside-dir }}" || true)
          CHANGED_DIRS=$(echo "$RAW_DIRS" | xargs -I{} dirname {} | sort -u || true)

          VALID_DIRS=()
          for dir in $CHANGED_DIRS; do
            if [ -d "$dir" ]; then
              VALID_DIRS+=("$dir")
            fi
          done

          if [ ${#VALID_DIRS[@]} -eq 0 ]; then
            JSON_DIRS="[]"
          else
            JSON_DIRS=$(printf '%s\n' "${VALID_DIRS[@]}" | jq -R . | jq -s .)
          fi

          echo "Filtered changed directories: $JSON_DIRS"
          echo "paths=$JSON_DIRS" >> $GITHUB_OUTPUT"
