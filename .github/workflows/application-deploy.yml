name: 'Release'

on:
  workflow_call:
    inputs:
      version:
        description: "The released version"
        type: string
        required: true
      environment:
        description: "The target environment"
        type: string
        required: true
    secrets:
      DIGITAL_OCEAN_API_KEY:
        description: "DigitalOcean API Key"
        required: true
      DOCKER_USERNAME:
        description: "Docker Hub username"
        required: true
      DOCKER_TOKEN:
        description: "Docker Hub access token or password"
        required: true

jobs:
  wait-distribution:
    runs-on: arc-runner-set
    name: 'Wait on docker image to exist'
    steps:
      - name: Check if Docker image tag exists (curl)
        run: |
          set -euo pipefail
          repo="${{ github.repository }}"
          tag="${{ inputs.version }}"
          repo_api="${repo#docker.io/}"
          if [ -z "$repo_api" ] || [ -z "$tag" ]; then
            echo "Image repository or tag not provided; skipping curl check."
            exit 1
          fi
          url="https://registry.hub.docker.com/v2/repositories/$repo_api/tags/$tag"
          echo "Checking: $url"
          code=$(curl -s -o /dev/null -w "%{http_code}" "$url")
          if [ "$code" != "200" ]; then
            echo "::error::Image $repo:$tag not found on Docker Hub (HTTP $code)"
            exit 1
          fi
          echo "Image $repo:$tag exists on Docker Hub."


  deploy-application:
    name: 'Deploy'
    uses: webgrip/workflows/.github/workflows/helm-chart-deploy.yml@main
    secrets:
      DIGITAL_OCEAN_API_KEY: ${{ secrets.DIGITAL_OCEAN_API_KEY }}
      DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
      DOCKER_TOKEN: ${{ secrets.DOCKER_TOKEN }}
    with:
      environment: ${{ inputs.environment }}
      path: './ops/helm/${{ github.event.repository.name }}'
      image_repository: ${{ github.repository }}
      image_tag: ${{ inputs.version }}
