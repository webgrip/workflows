name: "[Workflow] Semantic Release (Rust + JS)"

on:
  workflow_call:
    secrets:
      CARGO_REGISTRY_TOKEN:
        description: "Cargo registry token for publishing Rust crates"
        required: true
    inputs:
      release-type:
        description: "Explicit release level (major | minor | patch). Leave blank for auto‑detect."
        required: false
        type: string
    outputs:
      version:
        description: "Published version"
        value: ${{ jobs.semantic-release.outputs.version }}

permissions:
  contents: write
  pull-requests: write
  issues: write
  statuses: write

concurrency:
  group: semantic-release-${{ github.ref }}
  cancel-in-progress: true

jobs:
  semantic-release:
    name: "Semantic Release"
    runs-on: arc-runner-set
    container:
      image: webgrip/rust-releaser:latest
    outputs:
      version: ${{ steps.out.outputs.version }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Git safety + canonical remote          # ← added
        run: |
          git config --global --add safe.directory "$PWD"
          git remote set-url origin "https://github.com/${GITHUB_REPOSITORY}.git"

      - name: Build
        shell: bash
        run: |
          if [[ -f package.json ]]; then
            npm ci --ignore-scripts
            npm run build --if-present
          fi

          if [[ -f Cargo.toml ]]; then
            cargo build --release
          fi

      - name: Run semantic-release
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}
        run: npx semantic-release

      # - id: release
      #   uses: webgrip/workflows/.github/composite-actions/rust-semantic-release@main
      #   with:
      #     release-type: ${{ inputs.release-type }}
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     CARGO_REGISTRY_TOKEN: ${{ secrets.CARGO_REGISTRY_TOKEN }}

      - name: Propagate version output
        id: out
        run: echo "version=${{ steps.release.outputs.version }}" >> "$GITHUB_OUTPUT"
