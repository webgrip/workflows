name: '[Action] Build and Push Docker Image'
description: 'Builds and Pushes a docker image'

inputs:
  docker-context:
    type: string
    description: 'Docker context'
    required: true
    default: '.'
  docker-file:
    type: string
    description: 'Dockerfile path from the context'
    required: true
    default: 'Dockerfile'
  docker-tags:
    type: string
    description: 'Docker tags'
    required: true
  docker-target:
    type: string
    description: 'Docker target'
    required: false
    default: ''

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - uses: docker/login-action@v3
      with:
        username: ${{ env.DOCKER_USERNAME }}
        password: ${{ env.DOCKER_TOKEN }}
    - name: Get cache tag
      id: cache-tag
      shell: bash
      run: |
        # Split the docker-tags input by newline, ignore empty lines, and select the first tag.
        primary=$(echo "${{ inputs.docker-tags }}" | grep -v '^\s*$' | head -n 1)
        # Use :cache instead of :latest to avoid conflicts with the latest tag.
        cache="${primary%:latest}:cache"
        echo "cache_tag=$cache" >> "$GITHUB_OUTPUT"
    - uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.docker-context }}/${{ inputs.docker-file }}
        platforms: linux/amd64,linux/arm64
        push: true
        tags: |
          ${{ inputs.docker-tags }}
        target: ${{ inputs.docker-target }}
        cache-from: type=registry,ref=${{ steps.cache-tag.outputs.cache_tag }}
        cache-to: type=registry,ref=${{ steps.cache-tag.outputs.cache_tag }},mode=max,compression=zstd
