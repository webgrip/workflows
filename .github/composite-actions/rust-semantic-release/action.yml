name: "[Action] Semantic Release"
description: "Automate versioning & changelog for Rust crates and/or JS packages via semanticâ€‘release"

inputs:
  release-type:
    description: "Explicit release level override (major | minor | patch)"
    required: false

outputs:
  version:
    description: "The new version number"
    value: ${{ steps.set-version.outputs.version }}

runs:
  using: "composite"
  steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0         # semantic-release needs the full history

    - id: detect
      shell: bash
      run: |
        if [[ -f Cargo.toml ]];     then echo "is_rust=true" >>"$GITHUB_OUTPUT"; fi
        if [[ -f package.json ]];   then echo "is_node=true" >>"$GITHUB_OUTPUT"; fi

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 22
        # Only enable the npm cache when we actually have a lock-file
        cache: ${{ steps.detect.outputs.is_node == 'true' && 'npm' || '' }}

    - name: Install npm dependencies
      if: steps.detect.outputs.is_node == 'true'
      shell: bash
      run: npm ci --ignore-scripts

    - name: Build (npm)
      if: steps.detect.outputs.is_node == 'true'
      shell: bash
      run: npm run build --if-present

    - name: Install semantic-release & plugins
      shell: bash
      run: |
        npm install --no-save \
          semantic-release \
          @semantic-release/changelog \
          @semantic-release/commit-analyzer \
          @semantic-release/release-notes-generator \
          @semantic-release/git \
          @semantic-release/github \
          semantic-release-github-actions-tags \
          semantic-release-cargo

    - id: sr
      shell: bash
      env:
        GITHUB_OUTPUT: $GITHUB_OUTPUT
      run: |
        npx semantic-release ${{ steps.cfg.outputs.ARG }}

    - id: set-version
      if: always()
      shell: bash
      run: echo "version=${{ steps.sr.outputs.nextRelease.version }}" >> "$GITHUB_OUTPUT"